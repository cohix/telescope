{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2","program":"/Users/cohix-16/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bincode","/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=819fa7ca8a2b817d","-C","extra-filename=-819fa7ca8a2b817d","--out-dir","/Users/cohix-16/Workspaces/suborbital/telescope/telescope-web/target/rls/debug/deps","-L","dependency=/Users/cohix-16/Workspaces/suborbital/telescope/telescope-web/target/rls/debug/deps","--extern","byteorder=/Users/cohix-16/Workspaces/suborbital/telescope/telescope-web/target/rls/debug/deps/libbyteorder-046b27887fbfd9ca.rmeta","--extern","serde=/Users/cohix-16/Workspaces/suborbital/telescope/telescope-web/target/rls/debug/deps/libserde-376c476021279b31.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/cohix-16/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/cohix-16/Workspaces/suborbital/telescope/telescope-web/target/rls/debug/deps/libbincode-819fa7ca8a2b817d.rmeta"},"prelude":{"crate_id":{"name":"bincode","disambiguator":[4403505193232096256,662376171291103149]},"crate_root":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src","external_crates":[{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[6703002063498893094,2537813551170700675]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":16,"id":{"name":"serde","disambiguator":[14340413299207487193,6364571684461615968]}},{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","num":17,"id":{"name":"serde_derive","disambiguator":[13573436681350311961,12396844843578574629]}}],"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":0,"byte_end":6525,"line_start":1,"line_end":201,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8330,"byte_end":8339,"line_start":42,"line_end":42,"column_start":24,"column_end":33},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8330,"byte_end":8339,"line_start":42,"line_end":42,"column_start":24,"column_end":33},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1023},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8341,"byte_end":8353,"line_start":42,"line_end":42,"column_start":35,"column_end":47},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8341,"byte_end":8353,"line_start":42,"line_end":42,"column_start":35,"column_end":47},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8355,"byte_end":8367,"line_start":42,"line_end":42,"column_start":49,"column_end":61},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8355,"byte_end":8367,"line_start":42,"line_end":42,"column_start":49,"column_end":61},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8390,"byte_end":8404,"line_start":43,"line_end":43,"column_start":21,"column_end":35},"alias_span":null,"name":"FixintEncoding","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8390,"byte_end":8404,"line_start":43,"line_end":43,"column_start":21,"column_end":35},"alias_span":null,"name":"FixintEncoding","value":"","parent":{"krate":0,"index":23}},{"kind":"Use","ref_id":{"krate":0,"index":1059},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8406,"byte_end":8420,"line_start":43,"line_end":43,"column_start":37,"column_end":51},"alias_span":null,"name":"VarintEncoding","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8406,"byte_end":8420,"line_start":43,"line_end":43,"column_start":37,"column_end":51},"alias_span":null,"name":"VarintEncoding","value":"","parent":{"krate":0,"index":24}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8218,"byte_end":8219,"line_start":38,"line_end":38,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Config","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8470,"byte_end":8477,"line_start":45,"line_end":45,"column_start":23,"column_end":30},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8470,"byte_end":8477,"line_start":45,"line_end":45,"column_start":23,"column_end":30},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8479,"byte_end":8487,"line_start":45,"line_end":45,"column_start":32,"column_end":40},"alias_span":null,"name":"Infinite","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1143},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8479,"byte_end":8487,"line_start":45,"line_end":45,"column_start":32,"column_end":40},"alias_span":null,"name":"Infinite","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":1147},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8515,"byte_end":8528,"line_start":46,"line_end":46,"column_start":26,"column_end":39},"alias_span":null,"name":"AllowTrailing","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1148},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8515,"byte_end":8528,"line_start":46,"line_end":46,"column_start":26,"column_end":39},"alias_span":null,"name":"AllowTrailing","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1152},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8530,"byte_end":8544,"line_start":46,"line_end":46,"column_start":41,"column_end":55},"alias_span":null,"name":"RejectTrailing","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1153},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8530,"byte_end":8544,"line_start":46,"line_end":46,"column_start":41,"column_end":55},"alias_span":null,"name":"RejectTrailing","value":"","parent":{"krate":0,"index":31}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1244,"byte_end":1250,"line_start":44,"line_end":44,"column_start":18,"column_end":24},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1252,"byte_end":1266,"line_start":44,"line_end":44,"column_start":26,"column_end":40},"alias_span":null,"name":"DefaultOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1268,"byte_end":1275,"line_start":44,"line_end":44,"column_start":42,"column_end":49},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1296,"byte_end":1307,"line_start":45,"line_end":45,"column_start":19,"column_end":30},"alias_span":null,"name":"BincodeRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1321,"byte_end":1333,"line_start":46,"line_end":46,"column_start":13,"column_end":25},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1351,"byte_end":1356,"line_start":47,"line_end":47,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1231},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1358,"byte_end":1367,"line_start":47,"line_end":47,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1369,"byte_end":1375,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1391,"byte_end":1401,"line_start":48,"line_end":48,"column_start":14,"column_end":24},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":0,"byte_end":6525,"line_start":1,"line_end":201,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":423},{"krate":0,"index":646},{"krate":0,"index":670},{"krate":0,"index":727},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":1021}],"decl_id":null,"docs":" Bincode is a crate for encoding and decoding using a tiny binary\n serialization strategy.  Using it, you can easily go from having\n an object in memory, quickly serialize it to bytes, and then\n deserialize it back just as fast!","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints, bare_trait_objects, deprecated)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":23,"byte_end":79,"line_start":2,"line_end":2,"column_start":1,"column_end":57}},{"value":"! Bincode is a crate for encoding and decoding using a tiny binary","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":81,"byte_end":149,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"! serialization strategy.  Using it, you can easily go from having","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":150,"byte_end":218,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"! an object in memory, quickly serialize it to bytes, and then","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":219,"byte_end":283,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"! deserialize it back just as fast!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":284,"byte_end":321,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":322,"byte_end":325,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ### Using Basic Functions","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":326,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":356,"byte_end":359,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```edition2018","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":360,"byte_end":378,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"! fn main() {","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":379,"byte_end":394,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"!     // The object that we will serialize.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":395,"byte_end":440,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"!     let target: Option<String>  = Some(\"hello world\".to_string());","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":441,"byte_end":511,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":512,"byte_end":515,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"!     let encoded: Vec<u8> = bincode::serialize(&target).unwrap();","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":516,"byte_end":584,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"!     let decoded: Option<String> = bincode::deserialize(&encoded[..]).unwrap();","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":585,"byte_end":667,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"!     assert_eq!(target, decoded);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":668,"byte_end":704,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":705,"byte_end":710,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":711,"byte_end":718,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":719,"byte_end":722,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ### 128bit numbers","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":723,"byte_end":745,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":746,"byte_end":749,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! Support for `i128` and `u128` is automatically enabled on Rust toolchains","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":750,"byte_end":827,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"! greater than or equal to `1.26.0` and disabled for targets which do not support it","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":828,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"crate_name = \"bincode\"","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":973,"byte_end":999,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1000,"byte_end":1023,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1024,"byte_end":1048,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":1287},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":1297},{"krate":0,"index":20},{"krate":0,"index":1299},{"krate":0,"index":21},{"krate":0,"index":1301},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":1303},{"krate":0,"index":24},{"krate":0,"index":1305},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":1307},{"krate":0,"index":28},{"krate":0,"index":1309},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":1311},{"krate":0,"index":31},{"krate":0,"index":1313},{"krate":0,"index":32},{"krate":0,"index":44},{"krate":0,"index":229},{"krate":0,"index":281},{"krate":0,"index":294},{"krate":0,"index":1157},{"krate":0,"index":1162},{"krate":0,"index":1160},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":315},{"krate":0,"index":357},{"krate":0,"index":1163},{"krate":0,"index":1171},{"krate":0,"index":1168},{"krate":0,"index":1175},{"krate":0,"index":1183},{"krate":0,"index":1180},{"krate":0,"index":1187},{"krate":0,"index":1195},{"krate":0,"index":1192},{"krate":0,"index":1199},{"krate":0,"index":1207},{"krate":0,"index":1204},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":383},{"krate":0,"index":391},{"krate":0,"index":399},{"krate":0,"index":407}],"decl_id":null,"docs":" `bincode` uses a Builder-pattern to configure the Serializers and Deserializers in this\n crate. This means that if you need to customize the behavior of `bincode`, you should create an\n instance of the `DefaultOptions` struct:","sig":null,"attributes":[{"value":"! `bincode` uses a Builder-pattern to configure the Serializers and Deserializers in this","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":6728,"byte_end":6819,"line_start":1,"line_end":1,"column_start":1,"column_end":92}},{"value":"! crate. This means that if you need to customize the behavior of `bincode`, you should create an","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":6820,"byte_end":6919,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"! instance of the `DefaultOptions` struct:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":6920,"byte_end":6964,"line_start":3,"line_end":3,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":6965,"byte_end":6968,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":6969,"byte_end":6980,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"! use bincode::Options;","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":6981,"byte_end":7006,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"! let my_options = bincode::DefaultOptions::new();","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7007,"byte_end":7059,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7060,"byte_end":7067,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7068,"byte_end":7071,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # Options Struct vs bincode functions","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7072,"byte_end":7113,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7114,"byte_end":7117,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Due to historical reasons, the default options used by the `serialize()` and `deserialize()`","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7118,"byte_end":7214,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"! family of functions are different than the default options created by the `DefaultOptions` struct:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7215,"byte_end":7317,"line_start":13,"line_end":13,"column_start":1,"column_end":103}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7318,"byte_end":7321,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! |          | Byte limit | Endianness | Int Encoding | Trailing Behavior |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7322,"byte_end":7399,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"! |----------|------------|------------|--------------|-------------------|","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7400,"byte_end":7477,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"! | struct   | Unlimited  | Little     | Varint       | Reject            |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7478,"byte_end":7555,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"! | function | Unlimited  | Little     | Fixint       | Allow             |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7556,"byte_end":7633,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7634,"byte_end":7637,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! This means that if you want to use the `Serialize` / `Deserialize` structs with the same","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7638,"byte_end":7730,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"! settings as the functions, you should adjust the `DefaultOptions` struct like so:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7731,"byte_end":7816,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7817,"byte_end":7820,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7821,"byte_end":7832,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"! use bincode::Options;","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7833,"byte_end":7858,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"! let my_options = bincode::DefaultOptions::new()","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7859,"byte_end":7910,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"!     .with_fixint_encoding()","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7911,"byte_end":7942,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"!     .allow_trailing_bytes();","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7943,"byte_end":7975,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"! ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":7976,"byte_end":7983,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20771,"byte_end":20787,"line_start":3,"line_end":3,"column_start":11,"column_end":27},"name":"BincodeByteOrder","qualname":"::config::endian::BincodeByteOrder","value":"BincodeByteOrder","parent":null,"children":[{"krate":0,"index":37}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20799,"byte_end":20805,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Endian","qualname":"::config::endian::BincodeByteOrder::Endian","value":"type Endian: ByteOrder + 'static;","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20898,"byte_end":20910,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"LittleEndian","qualname":"::config::endian::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian byte ordering.\n","sig":null,"attributes":[{"value":"/ Little-endian byte ordering.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20831,"byte_end":20863,"line_start":7,"line_end":7,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20977,"byte_end":20986,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"BigEndian","qualname":"::config::endian::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big-endian byte ordering.\n","sig":null,"attributes":[{"value":"/ Big-endian byte ordering.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20913,"byte_end":20942,"line_start":11,"line_end":11,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21075,"byte_end":21087,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"NativeEndian","qualname":"::config::endian::NativeEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" The native byte ordering of the current system.\n","sig":null,"attributes":[{"value":"/ The native byte ordering of the current system.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":20989,"byte_end":21040,"line_start":15,"line_end":15,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21508,"byte_end":21519,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"IntEncoding","qualname":"::config::int::IntEncoding","value":"IntEncoding","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1050}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21599,"byte_end":21607,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"u16_size","qualname":"::config::int::IntEncoding::u16_size","value":"pub fn u16_size(u16) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[{"value":"/ Gets the size (in bytes) that a value would be serialized to.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21526,"byte_end":21591,"line_start":9,"line_end":9,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21701,"byte_end":21709,"line_start":12,"line_end":12,"column_start":8,"column_end":16},"name":"u32_size","qualname":"::config::int::IntEncoding::u32_size","value":"pub fn u32_size(u32) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[{"value":"/ Gets the size (in bytes) that a value would be serialized to.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21628,"byte_end":21693,"line_start":11,"line_end":11,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21803,"byte_end":21811,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"u64_size","qualname":"::config::int::IntEncoding::u64_size","value":"pub fn u64_size(u64) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[{"value":"/ Gets the size (in bytes) that a value would be serialized to.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21730,"byte_end":21795,"line_start":13,"line_end":13,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21906,"byte_end":21914,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"i16_size","qualname":"::config::int::IntEncoding::i16_size","value":"pub fn i16_size(i16) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[{"value":"/ Gets the size (in bytes) that a value would be serialized to.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21833,"byte_end":21898,"line_start":16,"line_end":16,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22008,"byte_end":22016,"line_start":19,"line_end":19,"column_start":8,"column_end":16},"name":"i32_size","qualname":"::config::int::IntEncoding::i32_size","value":"pub fn i32_size(i32) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[{"value":"/ Gets the size (in bytes) that a value would be serialized to.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":21935,"byte_end":22000,"line_start":18,"line_end":18,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22110,"byte_end":22118,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"i64_size","qualname":"::config::int::IntEncoding::i64_size","value":"pub fn i64_size(i64) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[{"value":"/ Gets the size (in bytes) that a value would be serialized to.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22037,"byte_end":22102,"line_start":20,"line_end":20,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22165,"byte_end":22173,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"len_size","qualname":"::config::int::IntEncoding::len_size","value":"pub fn len_size(usize) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22140,"byte_end":22157,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22304,"byte_end":22317,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"serialize_len","qualname":"::config::int::IntEncoding::serialize_len","value":"pub fn serialize_len<W: Write,\n                     O: Options>(&mut ::ser::Serializer<W, O>, usize)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Serializes a sequence length.\n","sig":null,"attributes":[{"value":"/ Serializes a sequence length.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22241,"byte_end":22274,"line_start":28,"line_end":28,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22279,"byte_end":22296,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22485,"byte_end":22498,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"::config::int::IntEncoding::serialize_u16","value":"pub fn serialize_u16<W: Write, O: Options>(&mut ::ser::Serializer<W, O>, u16)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22612,"byte_end":22625,"line_start":42,"line_end":42,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"::config::int::IntEncoding::serialize_u32","value":"pub fn serialize_u32<W: Write, O: Options>(&mut ::ser::Serializer<W, O>, u32)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22739,"byte_end":22752,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"::config::int::IntEncoding::serialize_u64","value":"pub fn serialize_u64<W: Write, O: Options>(&mut ::ser::Serializer<W, O>, u64)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22866,"byte_end":22879,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"::config::int::IntEncoding::serialize_i16","value":"pub fn serialize_i16<W: Write, O: Options>(&mut ::ser::Serializer<W, O>, i16)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":22993,"byte_end":23006,"line_start":57,"line_end":57,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"::config::int::IntEncoding::serialize_i32","value":"pub fn serialize_i32<W: Write, O: Options>(&mut ::ser::Serializer<W, O>, i32)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23120,"byte_end":23133,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"::config::int::IntEncoding::serialize_i64","value":"pub fn serialize_i64<W: Write, O: Options>(&mut ::ser::Serializer<W, O>, i64)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23309,"byte_end":23324,"line_start":69,"line_end":69,"column_start":8,"column_end":23},"name":"deserialize_len","qualname":"::config::int::IntEncoding::deserialize_len","value":"pub fn deserialize_len<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<usize>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Deserializes a sequence length.\n","sig":null,"attributes":[{"value":"/ Deserializes a sequence length.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23244,"byte_end":23279,"line_start":67,"line_end":67,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23284,"byte_end":23301,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23508,"byte_end":23523,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"::config::int::IntEncoding::deserialize_u16","value":"pub fn deserialize_u16<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<u16>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23636,"byte_end":23651,"line_start":79,"line_end":79,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"::config::int::IntEncoding::deserialize_u32","value":"pub fn deserialize_u32<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<u32>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23764,"byte_end":23779,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"::config::int::IntEncoding::deserialize_u64","value":"pub fn deserialize_u64<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<u64>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":23892,"byte_end":23907,"line_start":87,"line_end":87,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"::config::int::IntEncoding::deserialize_i16","value":"pub fn deserialize_i16<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<i16>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24020,"byte_end":24035,"line_start":91,"line_end":91,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"::config::int::IntEncoding::deserialize_i32","value":"pub fn deserialize_i32<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<i32>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24148,"byte_end":24163,"line_start":95,"line_end":95,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"::config::int::IntEncoding::deserialize_i64","value":"pub fn deserialize_i64<'de, R: BincodeRead,\n                       O: Options>(&mut ::de::Deserializer<R, O>)\n-> Result<i64>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24307,"byte_end":24316,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"u128_size","qualname":"::config::int::IntEncoding::u128_size","value":"pub fn u128_size(u128) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24345,"byte_end":24354,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"i128_size","qualname":"::config::int::IntEncoding::i128_size","value":"pub fn i128_size(i128) -> u64","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24383,"byte_end":24397,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"serialize_u128","qualname":"::config::int::IntEncoding::serialize_u128","value":"pub fn serialize_u128<W: Write, O: Options>(&mut ::Serializer<W, O>, u128)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24522,"byte_end":24538,"line_start":106,"line_end":106,"column_start":12,"column_end":28},"name":"deserialize_u128","qualname":"::config::int::IntEncoding::deserialize_u128","value":"pub fn deserialize_u128<'de, R: BincodeRead,\n                        O: Options>(&mut ::Deserializer<R, O>) -> Result<u128>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24659,"byte_end":24673,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"serialize_i128","qualname":"::config::int::IntEncoding::serialize_i128","value":"pub fn serialize_i128<W: Write, O: Options>(&mut ::Serializer<W, O>, i128)\n-> Result<()>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24798,"byte_end":24814,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"deserialize_i128","qualname":"::config::int::IntEncoding::deserialize_i128","value":"pub fn deserialize_i128<'de, R: BincodeRead,\n                        O: Options>(&mut ::Deserializer<R, O>) -> Result<i128>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25138,"byte_end":25152,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"FixintEncoding","qualname":"::config::int::FixintEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size integer encoding.","sig":null,"attributes":[{"value":"/ Fixed-size integer encoding.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24933,"byte_end":24965,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24966,"byte_end":24969,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ * Fixed size integers are encoded directly","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":24970,"byte_end":25016,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/ * Enum discriminants are encoded as u32","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25017,"byte_end":25060,"line_start":122,"line_end":122,"column_start":1,"column_end":44}},{"value":"/ * Lengths and usize are encoded as u64","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25061,"byte_end":25103,"line_start":123,"line_end":123,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26875,"byte_end":26889,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"VarintEncoding","qualname":"::config::int::VarintEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Variable-size integer encoding (excepting [ui]8).","sig":null,"attributes":[{"value":"/ Variable-size integer encoding (excepting [ui]8).","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25155,"byte_end":25208,"line_start":127,"line_end":127,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25209,"byte_end":25212,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Encoding an unsigned integer v (of any type excepting u8) works as follows:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25213,"byte_end":25292,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25293,"byte_end":25296,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ 1. If `u < 251`, encode it as a single byte with that value.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25297,"byte_end":25361,"line_start":131,"line_end":131,"column_start":1,"column_end":65}},{"value":"/ 2. If `251 <= u < 2**16`, encode it as a literal byte 251, followed by a u16 with value `u`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25362,"byte_end":25458,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/ 3. If `2**16 <= u < 2**32`, encode it as a literal byte 252, followed by a u32 with value `u`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25459,"byte_end":25557,"line_start":133,"line_end":133,"column_start":1,"column_end":99}},{"value":"/ 4. If `2**32 <= u < 2**64`, encode it as a literal byte 253, followed by a u64 with value `u`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25558,"byte_end":25656,"line_start":134,"line_end":134,"column_start":1,"column_end":99}},{"value":"/ 5. If `2**64 <= u < 2**128`, encode it as a literal byte 254, followed by a","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25657,"byte_end":25736,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/   u128 with value `u`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25737,"byte_end":25763,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25764,"byte_end":25767,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Then, for signed integers, we first convert to unsigned using the zigzag algorithm,","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25768,"byte_end":25855,"line_start":138,"line_end":138,"column_start":1,"column_end":88}},{"value":"/ and then encode them as we do for unsigned integers generally. The reason we use this","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25856,"byte_end":25945,"line_start":139,"line_end":139,"column_start":1,"column_end":90}},{"value":"/ algorithm is that it encodes those values which are close to zero in less bytes; the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":25946,"byte_end":26034,"line_start":140,"line_end":140,"column_start":1,"column_end":89}},{"value":"/ obvious algorithm, where we encode the cast values, gives a very large encoding for all","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26035,"byte_end":26126,"line_start":141,"line_end":141,"column_start":1,"column_end":92}},{"value":"/ negative values.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26127,"byte_end":26147,"line_start":142,"line_end":142,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26148,"byte_end":26151,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ The zigzag algorithm is defined as follows:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26152,"byte_end":26199,"line_start":144,"line_end":144,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26200,"byte_end":26203,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26204,"byte_end":26217,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/ fn zigzag(v: Signed) -> Unsigned {","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26218,"byte_end":26256,"line_start":147,"line_end":147,"column_start":1,"column_end":39}},{"value":"/     match v {","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26257,"byte_end":26274,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/         0 => 0,","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26275,"byte_end":26294,"line_start":149,"line_end":149,"column_start":1,"column_end":20}},{"value":"/         v if v < 0 => |v| * 2 - 1","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26295,"byte_end":26332,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/         v if v > 0 => v * 2","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26333,"byte_end":26364,"line_start":151,"line_end":151,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26365,"byte_end":26374,"line_start":152,"line_end":152,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26375,"byte_end":26380,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26381,"byte_end":26388,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26389,"byte_end":26392,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ And works such that:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26393,"byte_end":26417,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26418,"byte_end":26421,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26422,"byte_end":26435,"line_start":158,"line_end":158,"column_start":1,"column_end":14}},{"value":"/ assert_eq!(zigzag(0), 0);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26436,"byte_end":26465,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(zigzag(-1), 1);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26466,"byte_end":26496,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(zigzag(1), 2);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26497,"byte_end":26526,"line_start":161,"line_end":161,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(zigzag(-2), 3);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26527,"byte_end":26557,"line_start":162,"line_end":162,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(zigzag(2), 4);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26558,"byte_end":26587,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(zigzag(i64::min_value()), u64::max_value());","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26588,"byte_end":26647,"line_start":164,"line_end":164,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26648,"byte_end":26655,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26656,"byte_end":26659,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Note that u256 and the like are unsupported by this format; if and when they are added to the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26660,"byte_end":26757,"line_start":167,"line_end":167,"column_start":1,"column_end":98}},{"value":"/ language, they may be supported via the extension point given by the 255 byte.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":26758,"byte_end":26840,"line_start":168,"line_end":168,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44955,"byte_end":44961,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::legacy::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"decl_id":null,"docs":" A configuration builder whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[{"value":"/ A configuration builder whose options Bincode will use","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44041,"byte_end":44099,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ while serializing and deserializing.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44100,"byte_end":44140,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44141,"byte_end":44144,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ### Options","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44145,"byte_end":44160,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/ Endianness: The endianness with which multi-byte integers will be read/written.  *default: little endian*","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44161,"byte_end":44270,"line_start":14,"line_end":14,"column_start":1,"column_end":110}},{"value":"/ Limit: The maximum number of bytes that will be read/written in a bincode serialize/deserialize. *default: unlimited*","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44271,"byte_end":44392,"line_start":15,"line_end":15,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44393,"byte_end":44396,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Byte Limit Details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44397,"byte_end":44423,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ The purpose of byte-limiting is to prevent Denial-Of-Service attacks whereby malicious attackers get bincode","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44424,"byte_end":44536,"line_start":18,"line_end":18,"column_start":1,"column_end":113}},{"value":"/ deserialization to crash your process by allocating too much memory or keeping a connection open for too long.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44537,"byte_end":44651,"line_start":19,"line_end":19,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44652,"byte_end":44655,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When a byte limit is set, bincode will return `Err` on any deserialization that goes over the limit, or any","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44656,"byte_end":44767,"line_start":21,"line_end":21,"column_start":1,"column_end":112}},{"value":"/ serialization that goes over the limit.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44768,"byte_end":44811,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"deprecated(since = \"1.3.0\", note =\n             \"please use the `DefaultOptions`/`Options` system instead\")","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":44836,"byte_end":44943,"line_start":24,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47357,"byte_end":47365,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"no_limit","qualname":"<Config>::no_limit","value":"pub fn no_limit(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"/ Sets the byte limit to be unlimited.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47254,"byte_end":47294,"line_start":111,"line_end":111,"column_start":5,"column_end":45}},{"value":"/ This is the default.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47299,"byte_end":47323,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47328,"byte_end":47345,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47530,"byte_end":47535,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"limit","qualname":"<Config>::limit","value":"pub fn limit(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"/ Sets the byte limit to `limit`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47461,"byte_end":47496,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47501,"byte_end":47518,"line_start":120,"line_end":120,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47751,"byte_end":47764,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Config>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"/ Sets the endianness to little-endian","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47648,"byte_end":47688,"line_start":126,"line_end":126,"column_start":5,"column_end":45}},{"value":"/ This is the default.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47693,"byte_end":47717,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47722,"byte_end":47739,"line_start":128,"line_end":128,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47930,"byte_end":47940,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Config>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"/ Sets the endianness to big-endian","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47859,"byte_end":47896,"line_start":134,"line_end":134,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47901,"byte_end":47918,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48126,"byte_end":48139,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Config>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"/ Sets the endianness to the the machine-native endianness","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48032,"byte_end":48092,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48097,"byte_end":48114,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48351,"byte_end":48360,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Config>::serialize","value":"pub fn serialize<T: ?Sized + serde::Serialize>(&Self, &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"/ Serializes a serializable object into a `Vec` of bytes using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48234,"byte_end":48317,"line_start":148,"line_end":148,"column_start":5,"column_end":88}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48322,"byte_end":48339,"line_start":149,"line_end":149,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48633,"byte_end":48648,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<Config>::serialized_size","value":"pub fn serialized_size<T: ?Sized + serde::Serialize>(&Self, &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"/ Returns the size that an object would be if serialized using Bincode with this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48503,"byte_end":48599,"line_start":154,"line_end":154,"column_start":5,"column_end":101}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48604,"byte_end":48621,"line_start":155,"line_end":155,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49070,"byte_end":49084,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"serialize_into","qualname":"<Config>::serialize_into","value":"pub fn serialize_into<W: Write, T: ?Sized + serde::Serialize>(&Self, W, &T)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"/ Serializes an object directly into a `Writer` using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48793,"byte_end":48867,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48872,"byte_end":48875,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If the serialization would take more bytes than allowed by the size limit, an error","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48880,"byte_end":48967,"line_start":162,"line_end":162,"column_start":5,"column_end":92}},{"value":"/ is returned and *no bytes* will be written into the `Writer`","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":48972,"byte_end":49036,"line_start":163,"line_end":163,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49041,"byte_end":49058,"line_start":164,"line_end":164,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49393,"byte_end":49404,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Config>::deserialize","value":"pub fn deserialize<'a, T: serde::Deserialize>(&Self, &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes into an instance of `T` using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49277,"byte_end":49359,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49364,"byte_end":49381,"line_start":174,"line_end":174,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49629,"byte_end":49649,"line_start":182,"line_end":182,"column_start":12,"column_end":32},"name":"deserialize_in_place","qualname":"<Config>::deserialize_in_place","value":"pub fn deserialize_in_place<'a, R, T>(&Self, R, &mut T) -> Result<()> where\nR: BincodeRead, T: serde::de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"/ TODO: document","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49558,"byte_end":49576,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49600,"byte_end":49617,"line_start":181,"line_end":181,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50001,"byte_end":50017,"line_start":192,"line_end":192,"column_start":12,"column_end":28},"name":"deserialize_seed","qualname":"<Config>::deserialize_seed","value":"pub fn deserialize_seed<'a, T: serde::de::DeserializeSeed>(&Self, T, &'a [u8])\n-> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes with state `seed` using this configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49890,"byte_end":49967,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":49972,"byte_end":49989,"line_start":191,"line_end":191,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50428,"byte_end":50444,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"deserialize_from","qualname":"<Config>::deserialize_from","value":"pub fn deserialize_from<R: Read, T: serde::de::DeserializeOwned>(&Self, R)\n-> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50237,"byte_end":50313,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50318,"byte_end":50321,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50326,"byte_end":50394,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50399,"byte_end":50416,"line_start":203,"line_end":203,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50840,"byte_end":50861,"line_start":215,"line_end":215,"column_start":12,"column_end":33},"name":"deserialize_from_seed","qualname":"<Config>::deserialize_from_seed","value":"pub fn deserialize_from_seed<'a, R: Read,\n                             T: serde::de::DeserializeSeed>(&Self, T, R)\n-> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er with state `seed` using this configuration","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er with state `seed` using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50631,"byte_end":50725,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50730,"byte_end":50733,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50738,"byte_end":50806,"line_start":213,"line_end":213,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":50811,"byte_end":50828,"line_start":214,"line_end":214,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51429,"byte_end":51452,"line_start":229,"line_end":229,"column_start":12,"column_end":35},"name":"deserialize_from_custom","qualname":"<Config>::deserialize_from_custom","value":"pub fn deserialize_from_custom<'a, R: BincodeRead,\n                               T: serde::de::DeserializeOwned>(&Self, R)\n-> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51090,"byte_end":51179,"line_start":223,"line_end":223,"column_start":5,"column_end":94}},{"value":"/ It is highly recommended to use `deserialize_from` unless you need to implement","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51184,"byte_end":51267,"line_start":224,"line_end":224,"column_start":5,"column_end":88}},{"value":"/ `BincodeRead` for performance reasons.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51272,"byte_end":51314,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51319,"byte_end":51322,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51327,"byte_end":51395,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51400,"byte_end":51417,"line_start":228,"line_end":228,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":52018,"byte_end":52046,"line_start":242,"line_end":242,"column_start":12,"column_end":40},"name":"deserialize_from_custom_seed","qualname":"<Config>::deserialize_from_custom_seed","value":"pub fn deserialize_from_custom_seed<'a, R: BincodeRead,\n                                    T: serde::de::DeserializeSeed>(&Self, T,\n                                                                   R)\n-> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er with state `seed` using the default\n configuration. It is highly recommended to use `deserialize_from` unless you need to\n implement `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er with state `seed` using the default","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51661,"byte_end":51753,"line_start":236,"line_end":236,"column_start":5,"column_end":97}},{"value":"/ configuration. It is highly recommended to use `deserialize_from` unless you need to","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51758,"byte_end":51846,"line_start":237,"line_end":237,"column_start":5,"column_end":93}},{"value":"/ implement `BincodeRead` for performance reasons.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51851,"byte_end":51903,"line_start":238,"line_end":238,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51908,"byte_end":51911,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51916,"byte_end":51984,"line_start":240,"line_end":240,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":51989,"byte_end":52006,"line_start":241,"line_end":241,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52716,"byte_end":52725,"line_start":4,"line_end":4,"column_start":11,"column_end":20},"name":"SizeLimit","qualname":"::config::limit::SizeLimit","value":"SizeLimit","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" A trait for stopping serialization and deserialization when a certain limit has been reached.\n","sig":null,"attributes":[{"value":"/ A trait for stopping serialization and deserialization when a certain limit has been reached.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52608,"byte_end":52705,"line_start":3,"line_end":3,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52873,"byte_end":52876,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"add","qualname":"::config::limit::SizeLimit::add","value":"pub fn add(&mut Self, u64) -> Result<()>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Tells the SizeLimit that a certain number of bytes has been\n read or written.  Returns Err if the limit has been exceeded.\n","sig":null,"attributes":[{"value":"/ Tells the SizeLimit that a certain number of bytes has been","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52732,"byte_end":52795,"line_start":5,"line_end":5,"column_start":5,"column_end":68}},{"value":"/ read or written.  Returns Err if the limit has been exceeded.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52800,"byte_end":52865,"line_start":6,"line_end":6,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52965,"byte_end":52970,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"limit","qualname":"::config::limit::SizeLimit::limit","value":"pub fn limit(&Self) -> Option<u64>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Returns the hard limit (if one exists)\n","sig":null,"attributes":[{"value":"/ Returns the hard limit (if one exists)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52915,"byte_end":52957,"line_start":8,"line_end":8,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53140,"byte_end":53147,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Bounded","qualname":"::config::limit::Bounded","value":"","parent":null,"children":[],"decl_id":null,"docs":" A SizeLimit that restricts serialized or deserialized messages from\n exceeding a certain byte length.\n","sig":null,"attributes":[{"value":"/ A SizeLimit that restricts serialized or deserialized messages from","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":52997,"byte_end":53068,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ exceeding a certain byte length.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53069,"byte_end":53105,"line_start":13,"line_end":13,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53148,"byte_end":53155,"line_start":15,"line_end":15,"column_start":20,"column_end":27},"name":"0","qualname":"::config::limit::Bounded::0","value":"u64","parent":{"krate":0,"index":1136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53304,"byte_end":53312,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Infinite","qualname":"::config::limit::Infinite","value":"","parent":null,"children":[],"decl_id":null,"docs":" A SizeLimit without a limit!\n Use this if you don't care about the size of encoded or decoded messages.\n","sig":null,"attributes":[{"value":"/ A SizeLimit without a limit!","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53159,"byte_end":53191,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ Use this if you don't care about the size of encoded or decoded messages.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53192,"byte_end":53269,"line_start":18,"line_end":18,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":299},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54034,"byte_end":54047,"line_start":5,"line_end":5,"column_start":11,"column_end":24},"name":"TrailingBytes","qualname":"::config::trailing::TrailingBytes","value":"TrailingBytes","parent":null,"children":[{"krate":0,"index":300}],"decl_id":null,"docs":" A trait for erroring deserialization if not all bytes were read.\n","sig":null,"attributes":[{"value":"/ A trait for erroring deserialization if not all bytes were read.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":53955,"byte_end":54023,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54154,"byte_end":54163,"line_start":7,"line_end":7,"column_start":8,"column_end":17},"name":"check_end","qualname":"::config::trailing::TrailingBytes::check_end","value":"pub fn check_end(&SliceReader) -> Result<()>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Checks a given slice reader to determine if deserialization used all bytes in the slice.\n","sig":null,"attributes":[{"value":"/ Checks a given slice reader to determine if deserialization used all bytes in the slice.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54054,"byte_end":54146,"line_start":6,"line_end":6,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54329,"byte_end":54342,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"AllowTrailing","qualname":"::config::trailing::AllowTrailing","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TrailingBytes config that will allow trailing bytes in slices after deserialization.\n","sig":null,"attributes":[{"value":"/ A TrailingBytes config that will allow trailing bytes in slices after deserialization.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54204,"byte_end":54294,"line_start":10,"line_end":10,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54521,"byte_end":54535,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"RejectTrailing","qualname":"::config::trailing::RejectTrailing","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TrailingBytes config that will cause bincode to produce an error if bytes are left over in the slice when deserialization is complete.\n","sig":null,"attributes":[{"value":"/ A TrailingBytes config that will cause bincode to produce an error if bytes are left over in the slice when deserialization is complete.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54345,"byte_end":54485,"line_start":14,"line_end":14,"column_start":1,"column_end":141}}]},{"kind":"Struct","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9548,"byte_end":9562,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"DefaultOptions","qualname":"::config::DefaultOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default options for bincode serialization/deserialization.","sig":null,"attributes":[{"value":"/ The default options for bincode serialization/deserialization.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8607,"byte_end":8673,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8674,"byte_end":8677,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ### Defaults","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8678,"byte_end":8694,"line_start":56,"line_end":56,"column_start":1,"column_end":17}},{"value":"/ By default bincode will use little-endian encoding for multi-byte integers, and will not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8695,"byte_end":8787,"line_start":57,"line_end":57,"column_start":1,"column_end":93}},{"value":"/ limit the number of serialized/deserialized bytes.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8788,"byte_end":8842,"line_start":58,"line_end":58,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8843,"byte_end":8846,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ### Configuring `DefaultOptions`","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8847,"byte_end":8883,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8884,"byte_end":8887,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ `DefaultOptions` implements the [Options] trait, which means it exposes functions to change the behavior of bincode.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":8888,"byte_end":9008,"line_start":62,"line_end":62,"column_start":1,"column_end":121}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9009,"byte_end":9012,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ For example, if you wanted to limit the bincode deserializer to 1 kilobyte of user input:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9013,"byte_end":9106,"line_start":64,"line_end":64,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9107,"byte_end":9110,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9111,"byte_end":9122,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ use bincode::Options;","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9123,"byte_end":9148,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/ let my_options = bincode::DefaultOptions::new().with_limit(1024);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9149,"byte_end":9218,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9219,"byte_end":9226,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9227,"byte_end":9230,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ### DefaultOptions struct vs. functions","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9231,"byte_end":9274,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9275,"byte_end":9278,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The default configuration used by this struct is not the same as that used by the bincode","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9279,"byte_end":9372,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/ helper functions in the root of this crate. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9373,"byte_end":9428,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"/ [config](index.html#options-struct-vs-bincode-functions) module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9429,"byte_end":9513,"line_start":75,"line_end":75,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9916,"byte_end":9919,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultOptions>::new","value":"pub fn new() -> DefaultOptions","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"/ Get a default configuration object.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9601,"byte_end":9640,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9645,"byte_end":9648,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ### Default Configuration:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9653,"byte_end":9683,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9688,"byte_end":9691,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ | Byte limit | Endianness | Int Encoding | Trailing Behavior |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9696,"byte_end":9762,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/ |------------|------------|--------------|-------------------|","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9767,"byte_end":9833,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/ | Unlimited  | Little     | Varint       | Reject            |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9838,"byte_end":9904,"line_start":86,"line_end":86,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":315},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11372,"byte_end":11379,"line_start":128,"line_end":128,"column_start":11,"column_end":18},"name":"Options","qualname":"::config::Options","value":"Options: InternalOptions + Sized","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":349},{"krate":0,"index":353}],"decl_id":null,"docs":" A configuration builder trait whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[{"value":"/ A configuration builder trait whose options Bincode will use","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10345,"byte_end":10409,"line_start":110,"line_end":110,"column_start":1,"column_end":65}},{"value":"/ while serializing and deserializing.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10410,"byte_end":10450,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10451,"byte_end":10454,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Options","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10455,"byte_end":10470,"line_start":113,"line_end":113,"column_start":1,"column_end":16}},{"value":"/ Endianness: The endianness with which multi-byte integers will be read/written.  *default: little endian*","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10471,"byte_end":10580,"line_start":114,"line_end":114,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10581,"byte_end":10584,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Limit: The maximum number of bytes that will be read/written in a bincode serialize/deserialize. *default: unlimited*","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10585,"byte_end":10706,"line_start":116,"line_end":116,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10707,"byte_end":10710,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Int Encoding: The encoding used for numbers, enum discriminants, and lengths. *default: varint*","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10711,"byte_end":10810,"line_start":118,"line_end":118,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10811,"byte_end":10814,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Trailing Behavior: The behavior when there are trailing bytes left over in a slice after deserialization. *default: reject*","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10815,"byte_end":10942,"line_start":120,"line_end":120,"column_start":1,"column_end":128}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10943,"byte_end":10946,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Byte Limit Details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10947,"byte_end":10973,"line_start":122,"line_end":122,"column_start":1,"column_end":27}},{"value":"/ The purpose of byte-limiting is to prevent Denial-Of-Service attacks whereby malicious attackers get bincode","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10974,"byte_end":11086,"line_start":123,"line_end":123,"column_start":1,"column_end":113}},{"value":"/ deserialization to crash your process by allocating too much memory or keeping a connection open for too long.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11087,"byte_end":11201,"line_start":124,"line_end":124,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11202,"byte_end":11205,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ When a byte limit is set, bincode will return `Err` on any deserialization that goes over the limit, or any","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11206,"byte_end":11317,"line_start":126,"line_end":126,"column_start":1,"column_end":112}},{"value":"/ serialization that goes over the limit.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11318,"byte_end":11361,"line_start":127,"line_end":127,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11488,"byte_end":11501,"line_start":131,"line_end":131,"column_start":8,"column_end":21},"name":"with_no_limit","qualname":"::config::Options::with_no_limit","value":"pub fn with_no_limit(Self) -> WithOtherLimit<Self, Infinite>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"/ Sets the byte limit to be unlimited.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11411,"byte_end":11451,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"/ This is the default.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11456,"byte_end":11480,"line_start":130,"line_end":130,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11642,"byte_end":11652,"line_start":136,"line_end":136,"column_start":8,"column_end":18},"name":"with_limit","qualname":"::config::Options::with_limit","value":"pub fn with_limit(Self, u64) -> WithOtherLimit<Self, Bounded>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"/ Sets the byte limit to `limit`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11599,"byte_end":11634,"line_start":135,"line_end":135,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11844,"byte_end":11862,"line_start":142,"line_end":142,"column_start":8,"column_end":26},"name":"with_little_endian","qualname":"::config::Options::with_little_endian","value":"pub fn with_little_endian(Self) -> WithOtherEndian<Self, LittleEndian>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"/ Sets the endianness to little-endian","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11767,"byte_end":11807,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/ This is the default.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11812,"byte_end":11836,"line_start":141,"line_end":141,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12001,"byte_end":12016,"line_start":147,"line_end":147,"column_start":8,"column_end":23},"name":"with_big_endian","qualname":"::config::Options::with_big_endian","value":"pub fn with_big_endian(Self) -> WithOtherEndian<Self, BigEndian>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"/ Sets the endianness to big-endian","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11956,"byte_end":11993,"line_start":146,"line_end":146,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12175,"byte_end":12193,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"with_native_endian","qualname":"::config::Options::with_native_endian","value":"pub fn with_native_endian(Self) -> WithOtherEndian<Self, NativeEndian>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"/ Sets the endianness to the the machine-native endianness","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12107,"byte_end":12167,"line_start":151,"line_end":151,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12333,"byte_end":12353,"line_start":157,"line_end":157,"column_start":8,"column_end":28},"name":"with_varint_encoding","qualname":"::config::Options::with_varint_encoding","value":"pub fn with_varint_encoding(Self)\n-> WithOtherIntEncoding<Self, VarintEncoding>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the length encoding to varint\n","sig":null,"attributes":[{"value":"/ Sets the length encoding to varint","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12287,"byte_end":12325,"line_start":156,"line_end":156,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12507,"byte_end":12527,"line_start":162,"line_end":162,"column_start":8,"column_end":28},"name":"with_fixint_encoding","qualname":"::config::Options::with_fixint_encoding","value":"pub fn with_fixint_encoding(Self)\n-> WithOtherIntEncoding<Self, FixintEncoding>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the length encoding to be fixed\n","sig":null,"attributes":[{"value":"/ Sets the length encoding to be fixed","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12459,"byte_end":12499,"line_start":161,"line_end":161,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12691,"byte_end":12712,"line_start":167,"line_end":167,"column_start":8,"column_end":29},"name":"reject_trailing_bytes","qualname":"::config::Options::reject_trailing_bytes","value":"pub fn reject_trailing_bytes(Self) -> WithOtherTrailing<Self, RejectTrailing>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the deserializer to reject trailing bytes\n","sig":null,"attributes":[{"value":"/ Sets the deserializer to reject trailing bytes","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12633,"byte_end":12683,"line_start":166,"line_end":166,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12869,"byte_end":12889,"line_start":172,"line_end":172,"column_start":8,"column_end":28},"name":"allow_trailing_bytes","qualname":"::config::Options::allow_trailing_bytes","value":"pub fn allow_trailing_bytes(Self) -> WithOtherTrailing<Self, AllowTrailing>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Sets the deserializer to allow trailing bytes\n","sig":null,"attributes":[{"value":"/ Sets the deserializer to allow trailing bytes","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12812,"byte_end":12861,"line_start":171,"line_end":171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13101,"byte_end":13110,"line_start":178,"line_end":178,"column_start":8,"column_end":17},"name":"serialize","qualname":"::config::Options::serialize","value":"pub fn serialize<S: ?Sized + serde::Serialize>(Self, &S) -> Result<Vec<u8>>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"/ Serializes a serializable object into a `Vec` of bytes using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":12988,"byte_end":13071,"line_start":176,"line_end":176,"column_start":5,"column_end":88}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13076,"byte_end":13093,"line_start":177,"line_end":177,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13351,"byte_end":13366,"line_start":184,"line_end":184,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::config::Options::serialized_size","value":"pub fn serialized_size<T: ?Sized + serde::Serialize>(Self, &T) -> Result<u64>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"/ Returns the size that an object would be if serialized using Bincode with this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13225,"byte_end":13321,"line_start":182,"line_end":182,"column_start":5,"column_end":101}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13326,"byte_end":13343,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13756,"byte_end":13770,"line_start":193,"line_end":193,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::config::Options::serialize_into","value":"pub fn serialize_into<W: Write, T: ?Sized + serde::Serialize>(Self, W, &T)\n-> Result<()>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"/ Serializes an object directly into a `Writer` using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13483,"byte_end":13557,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13562,"byte_end":13565,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If the serialization would take more bytes than allowed by the size limit, an error","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13570,"byte_end":13657,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/ is returned and *no bytes* will be written into the `Writer`","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13662,"byte_end":13726,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13731,"byte_end":13748,"line_start":192,"line_end":192,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14016,"byte_end":14027,"line_start":199,"line_end":199,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::config::Options::deserialize","value":"pub fn deserialize<'a, T: serde::Deserialize>(Self, &'a [u8]) -> Result<T>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes into an instance of `T` using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13904,"byte_end":13986,"line_start":197,"line_end":197,"column_start":5,"column_end":87}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":13991,"byte_end":14008,"line_start":198,"line_end":198,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14220,"byte_end":14240,"line_start":206,"line_end":206,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::config::Options::deserialize_in_place","value":"pub fn deserialize_in_place<'a, R, T>(Self, R, &mut T) -> Result<()> where\nR: BincodeRead, T: serde::de::Deserialize","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"/ TODO: document","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14153,"byte_end":14171,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14195,"byte_end":14212,"line_start":205,"line_end":205,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14560,"byte_end":14576,"line_start":216,"line_end":216,"column_start":8,"column_end":24},"name":"deserialize_seed","qualname":"::config::Options::deserialize_seed","value":"pub fn deserialize_seed<'a, T: serde::de::DeserializeSeed>(Self, T, &'a [u8])\n-> Result<T::Value>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes with state `seed` using this configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14453,"byte_end":14530,"line_start":214,"line_end":214,"column_start":5,"column_end":82}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14535,"byte_end":14552,"line_start":215,"line_end":215,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14955,"byte_end":14971,"line_start":228,"line_end":228,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::config::Options::deserialize_from","value":"pub fn deserialize_from<R: Read, T: serde::de::DeserializeOwned>(Self, R)\n-> Result<T>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14768,"byte_end":14844,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14849,"byte_end":14852,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14857,"byte_end":14925,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":14930,"byte_end":14947,"line_start":227,"line_end":227,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15312,"byte_end":15333,"line_start":236,"line_end":236,"column_start":8,"column_end":29},"name":"deserialize_from_seed","qualname":"::config::Options::deserialize_from_seed","value":"pub fn deserialize_from_seed<'a, R: Read,\n                             T: serde::de::DeserializeSeed>(Self, T, R)\n-> Result<T::Value>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er with state `seed` using this configuration","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er with state `seed` using this configuration","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15107,"byte_end":15201,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15206,"byte_end":15209,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15214,"byte_end":15282,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15287,"byte_end":15304,"line_start":235,"line_end":235,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15869,"byte_end":15892,"line_start":250,"line_end":250,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::config::Options::deserialize_from_custom","value":"pub fn deserialize_from_custom<'a, R: BincodeRead,\n                               T: serde::de::DeserializeOwned>(Self, R)\n-> Result<T>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15534,"byte_end":15623,"line_start":244,"line_end":244,"column_start":5,"column_end":94}},{"value":"/ It is highly recommended to use `deserialize_from` unless you need to implement","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15628,"byte_end":15711,"line_start":245,"line_end":245,"column_start":5,"column_end":88}},{"value":"/ `BincodeRead` for performance reasons.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15716,"byte_end":15758,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15763,"byte_end":15766,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15771,"byte_end":15839,"line_start":248,"line_end":248,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":15844,"byte_end":15861,"line_start":249,"line_end":249,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16426,"byte_end":16454,"line_start":263,"line_end":263,"column_start":8,"column_end":36},"name":"deserialize_from_custom_seed","qualname":"::config::Options::deserialize_from_custom_seed","value":"pub fn deserialize_from_custom_seed<'a, R: BincodeRead,\n                                    T: serde::de::DeserializeSeed>(Self, T, R)\n-> Result<T::Value>","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er with state `seed` using the default\n configuration. It is highly recommended to use `deserialize_from` unless you need to\n implement `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er with state `seed` using the default","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16073,"byte_end":16165,"line_start":257,"line_end":257,"column_start":5,"column_end":97}},{"value":"/ configuration. It is highly recommended to use `deserialize_from` unless you need to","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16170,"byte_end":16258,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ implement `BincodeRead` for performance reasons.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16263,"byte_end":16315,"line_start":259,"line_end":259,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16320,"byte_end":16323,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16328,"byte_end":16396,"line_start":261,"line_end":261,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16401,"byte_end":16418,"line_start":262,"line_end":262,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16808,"byte_end":16822,"line_start":276,"line_end":276,"column_start":12,"column_end":26},"name":"WithOtherLimit","qualname":"::config::WithOtherLimit","value":"WithOtherLimit {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" A configuration struct with a user-specified byte limit\n","sig":null,"attributes":[{"value":"/ A configuration struct with a user-specified byte limit","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16714,"byte_end":16773,"line_start":274,"line_end":274,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16996,"byte_end":17011,"line_start":283,"line_end":283,"column_start":12,"column_end":27},"name":"WithOtherEndian","qualname":"::config::WithOtherEndian","value":"WithOtherEndian {  }","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"decl_id":null,"docs":" A configuration struct with a user-specified endian order\n","sig":null,"attributes":[{"value":"/ A configuration struct with a user-specified endian order","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16900,"byte_end":16961,"line_start":281,"line_end":281,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17194,"byte_end":17214,"line_start":290,"line_end":290,"column_start":12,"column_end":32},"name":"WithOtherIntEncoding","qualname":"::config::WithOtherIntEncoding","value":"WithOtherIntEncoding {  }","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"decl_id":null,"docs":" A configuration struct with a user-specified length encoding\n","sig":null,"attributes":[{"value":"/ A configuration struct with a user-specified length encoding","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17095,"byte_end":17159,"line_start":288,"line_end":288,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17401,"byte_end":17418,"line_start":297,"line_end":297,"column_start":12,"column_end":29},"name":"WithOtherTrailing","qualname":"::config::WithOtherTrailing","value":"WithOtherTrailing {  }","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203}],"decl_id":null,"docs":" A configuration struct with a user-specified trailing bytes behavior.\n","sig":null,"attributes":[{"value":"/ A configuration struct with a user-specified trailing bytes behavior.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17293,"byte_end":17366,"line_start":295,"line_end":295,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":409},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19723,"byte_end":19738,"line_start":388,"line_end":388,"column_start":15,"column_end":30},"name":"InternalOptions","qualname":"::config::internal::InternalOptions","value":"InternalOptions","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":410},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19754,"byte_end":19759,"line_start":389,"line_end":389,"column_start":14,"column_end":19},"name":"Limit","qualname":"::config::internal::InternalOptions::Limit","value":"type Limit: SizeLimit + 'static;","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":411},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19795,"byte_end":19801,"line_start":390,"line_end":390,"column_start":14,"column_end":20},"name":"Endian","qualname":"::config::internal::InternalOptions::Endian","value":"type Endian: BincodeByteOrder + 'static;","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":412},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19844,"byte_end":19855,"line_start":391,"line_end":391,"column_start":14,"column_end":25},"name":"IntEncoding","qualname":"::config::internal::InternalOptions::IntEncoding","value":"type IntEncoding: IntEncoding + 'static;","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":413},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19893,"byte_end":19901,"line_start":392,"line_end":392,"column_start":14,"column_end":22},"name":"Trailing","qualname":"::config::internal::InternalOptions::Trailing","value":"type Trailing: TrailingBytes + 'static;","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19940,"byte_end":19945,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"limit","qualname":"::config::internal::InternalOptions::limit","value":"pub fn limit(&mut Self) -> &mut Self::Limit","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":423},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":501},{"krate":0,"index":507},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":530},{"krate":0,"index":630},{"krate":0,"index":643},{"krate":0,"index":645}],"decl_id":null,"docs":" Deserialize bincode data to a Rust data structure.\n","sig":null,"attributes":[{"value":"/ Deserialize bincode data to a Rust data structure.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1124,"byte_end":1178,"line_start":37,"line_end":37,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":443},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::de::read","value":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":461},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":490},{"krate":0,"index":493}],"decl_id":null,"docs":" Specialized ways to read data into bincode.\n","sig":null,"attributes":[{"value":"/ Specialized ways to read data into bincode.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55353,"byte_end":55400,"line_start":12,"line_end":12,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":447},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71283,"byte_end":71294,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"BincodeRead","qualname":"::de::read::BincodeRead","value":"BincodeRead<'storage>: io::Read","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" An optional Read trait for advanced Bincode usage.","sig":null,"attributes":[{"value":"/ An optional Read trait for advanced Bincode usage.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":70921,"byte_end":70975,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":70976,"byte_end":70979,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is highly recommended to use bincode with `io::Read` or `&[u8]` before","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":70980,"byte_end":71057,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ implementing a custom `BincodeRead`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71058,"byte_end":71098,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71099,"byte_end":71102,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The forward_read_* methods are necessary because some byte sources want","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71103,"byte_end":71178,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ to pass a long-lived borrow to the visitor and others want to pass a","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71179,"byte_end":71251,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ transient slice.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71252,"byte_end":71272,"line_start":12,"line_end":12,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71430,"byte_end":71446,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"::de::read::BincodeRead::forward_read_str","value":"pub fn forward_read_str<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Check that the next `length` bytes are a valid string and pass\n it on to the serde reader.\n","sig":null,"attributes":[{"value":"/ Check that the next `length` bytes are a valid string and pass","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71321,"byte_end":71387,"line_start":14,"line_end":14,"column_start":5,"column_end":71}},{"value":"/ it on to the serde reader.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71392,"byte_end":71422,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71636,"byte_end":71651,"line_start":21,"line_end":21,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"::de::read::BincodeRead::get_byte_buffer","value":"pub fn get_byte_buffer(&mut Self, usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Transfer ownership of the next `length` bytes to the caller.\n","sig":null,"attributes":[{"value":"/ Transfer ownership of the next `length` bytes to the caller.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71564,"byte_end":71628,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71778,"byte_end":71796,"line_start":24,"line_end":24,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"::de::read::BincodeRead::forward_read_bytes","value":"pub fn forward_read_bytes<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" Pass a slice of the next `length` bytes on to the serde reader.\n","sig":null,"attributes":[{"value":"/ Pass a slice of the next `length` bytes on to the serde reader.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71703,"byte_end":71770,"line_start":23,"line_end":23,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71972,"byte_end":71983,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::de::read::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A BincodeRead implementation for byte slices\n","sig":null,"attributes":[{"value":"/ A BincodeRead implementation for byte slices","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71912,"byte_end":71960,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":457},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72088,"byte_end":72096,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::de::read::IoReader","value":"IoReader {  }","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"decl_id":null,"docs":" A BincodeRead implementation for `io::Read`ers\n","sig":null,"attributes":[{"value":"/ A BincodeRead implementation for `io::Read`ers","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72026,"byte_end":72076,"line_start":34,"line_end":34,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55883,"byte_end":55895,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"decl_id":null,"docs":" A Deserializer that reads bytes from a buffer.","sig":null,"attributes":[{"value":"/ A Deserializer that reads bytes from a buffer.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55416,"byte_end":55466,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55467,"byte_end":55470,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This struct should rarely be used.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55471,"byte_end":55509,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/ In most cases, prefer the `deserialize_from` function.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55510,"byte_end":55568,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55569,"byte_end":55572,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The ByteOrder that is chosen will impact the endianness that","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55573,"byte_end":55637,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ is used to read integers out of the reader.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55638,"byte_end":55685,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55686,"byte_end":55689,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55690,"byte_end":55703,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let d = Deserializer::new(&mut some_reader, SizeLimit::new());","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55704,"byte_end":55770,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ serde::Deserialize::deserialize(&mut deserializer);","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55771,"byte_end":55826,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ let bytes_read = d.bytes_read();","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55827,"byte_end":55863,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55864,"byte_end":55871,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56460,"byte_end":56471,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"with_reader","qualname":"<Deserializer<IoReader<IR>, O>>::with_reader","value":"pub fn with_reader(IR, O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Deserializer with a given `Read`er and options.\n","sig":null,"attributes":[{"value":"/ Creates a new Deserializer with a given `Read`er and options.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56383,"byte_end":56448,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56743,"byte_end":56753,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Deserializer<SliceReader, O>>::from_slice","value":"pub fn from_slice(&'de [u8], O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Deserializer that will read from the given slice.\n","sig":null,"attributes":[{"value":"/ Creates a new Deserializer that will read from the given slice.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56664,"byte_end":56731,"line_start":56,"line_end":56,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":57043,"byte_end":57060,"line_start":67,"line_end":67,"column_start":12,"column_end":29},"name":"with_bincode_read","qualname":"<Deserializer<R, O>>::with_bincode_read","value":"pub fn with_bincode_read(R, O) -> Deserializer<R, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Deserializer with the given `BincodeRead`er\n","sig":null,"attributes":[{"value":"/ Creates a new Deserializer with the given `BincodeRead`er","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56970,"byte_end":57031,"line_start":66,"line_end":66,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":654},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":76890,"byte_end":76896,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a serialization or deserialization operation.\n","sig":null,"attributes":[{"value":"/ The result of a serialization or deserialization operation.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":76817,"byte_end":76880,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":656},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77003,"byte_end":77008,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Box<ErrorKind>","parent":null,"children":[],"decl_id":null,"docs":" An error that can be produced during (de)serializing.\n","sig":null,"attributes":[{"value":"/ An error that can be produced during (de)serializing.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":76936,"byte_end":76993,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77304,"byte_end":77306,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" If the error stems from the reader/writer that is being used\n during (de)serialization, that error will be stored and returned here.\n","sig":null,"attributes":[{"value":"/ If the error stems from the reader/writer that is being used","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77156,"byte_end":77220,"line_start":17,"line_end":17,"column_start":5,"column_end":69}},{"value":"/ during (de)serialization, that error will be stored and returned here.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77225,"byte_end":77299,"line_start":18,"line_end":18,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77416,"byte_end":77435,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"InvalidUtf8Encoding","qualname":"::error::ErrorKind::InvalidUtf8Encoding","value":"ErrorKind::InvalidUtf8Encoding(Utf8Error)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a string that is not valid utf8\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize a string that is not valid utf8","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77323,"byte_end":77411,"line_start":20,"line_end":20,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77570,"byte_end":77589,"line_start":24,"line_end":24,"column_start":5,"column_end":24},"name":"InvalidBoolEncoding","qualname":"::error::ErrorKind::InvalidBoolEncoding","value":"ErrorKind::InvalidBoolEncoding(u8)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a bool that was\n not encoded as either a 1 or a 0\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize a bool that was","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77452,"byte_end":77524,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ not encoded as either a 1 or a 0","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77529,"byte_end":77565,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77702,"byte_end":77721,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"InvalidCharEncoding","qualname":"::error::ErrorKind::InvalidCharEncoding","value":"ErrorKind::InvalidCharEncoding","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize a char that is not in the correct format.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77599,"byte_end":77697,"line_start":25,"line_end":25,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77850,"byte_end":77868,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InvalidTagEncoding","qualname":"::error::ErrorKind::InvalidTagEncoding","value":"ErrorKind::InvalidTagEncoding(usize)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize the tag of an enum that is\n not in the expected ranges\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize the tag of an enum that is","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77727,"byte_end":77810,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ not in the expected ranges","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77815,"byte_end":77845,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78010,"byte_end":78036,"line_start":32,"line_end":32,"column_start":5,"column_end":31},"name":"DeserializeAnyNotSupported","qualname":"::error::ErrorKind::DeserializeAnyNotSupported","value":"ErrorKind::DeserializeAnyNotSupported","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Serde has a deserialize_any method that lets the format hint to the\n object which route to take in deserializing.\n","sig":null,"attributes":[{"value":"/ Serde has a deserialize_any method that lets the format hint to the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77881,"byte_end":77952,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ object which route to take in deserializing.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77957,"byte_end":78005,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78152,"byte_end":78161,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::error::ErrorKind::SizeLimit","value":"ErrorKind::SizeLimit","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" If (de)serializing a message takes more than the provided size limit, this\n error is returned.\n","sig":null,"attributes":[{"value":"/ If (de)serializing a message takes more than the provided size limit, this","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78042,"byte_end":78120,"line_start":33,"line_end":33,"column_start":5,"column_end":83}},{"value":"/ error is returned.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78125,"byte_end":78147,"line_start":34,"line_end":34,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78244,"byte_end":78266,"line_start":37,"line_end":37,"column_start":5,"column_end":27},"name":"SequenceMustHaveLength","qualname":"::error::ErrorKind::SequenceMustHaveLength","value":"ErrorKind::SequenceMustHaveLength","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Bincode can not encode sequences of unknown length (like iterators).\n","sig":null,"attributes":[{"value":"/ Bincode can not encode sequences of unknown length (like iterators).","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78167,"byte_end":78239,"line_start":36,"line_end":36,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78315,"byte_end":78321,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::ErrorKind::Custom","value":"ErrorKind::Custom(String)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" A custom error message from Serde.\n","sig":null,"attributes":[{"value":"/ A custom error message from Serde.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78272,"byte_end":78310,"line_start":38,"line_end":38,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77140,"byte_end":77149,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// If the error stems from the reader/writer that is being used\n    /// during (de)serialization, that error will be stored and returned here.\n    Io(io::Error),\n\n    /// Returned if the deserializer attempts to deserialize a string that is not valid utf8\n    InvalidUtf8Encoding(Utf8Error),\n\n    /// Returned if the deserializer attempts to deserialize a bool that was\n    /// not encoded as either a 1 or a 0\n    InvalidBoolEncoding(u8),\n\n    /// Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n    InvalidCharEncoding,\n\n    /// Returned if the deserializer attempts to deserialize the tag of an enum that is\n    /// not in the expected ranges\n    InvalidTagEncoding(usize),\n\n    /// Serde has a deserialize_any method that lets the format hint to the\n    /// object which route to take in deserializing.\n    DeserializeAnyNotSupported,\n\n    /// If (de)serializing a message takes more than the provided size limit, this\n    /// error is returned.\n    SizeLimit,\n\n    /// Bincode can not encode sequences of unknown length (like iterators).\n    SequenceMustHaveLength,\n\n    /// A custom error message from Serde.\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252}],"decl_id":null,"docs":" The kind of error that can be produced during a serialization or deserialization.\n","sig":null,"attributes":[{"value":"/ The kind of error that can be produced during a serialization or deserialization.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":77028,"byte_end":77113,"line_start":14,"line_end":14,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85590,"byte_end":85600,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"decl_id":null,"docs":" An Serializer that encodes values directly into a Writer.","sig":null,"attributes":[{"value":"/ An Serializer that encodes values directly into a Writer.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85318,"byte_end":85379,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85380,"byte_end":85383,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The specified byte-order will impact the endianness that is","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85384,"byte_end":85447,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ used during the encoding.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85448,"byte_end":85477,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85478,"byte_end":85481,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This struct should not be used often.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85482,"byte_end":85523,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ For most cases, prefer the `encode_into` function.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85524,"byte_end":85578,"line_start":19,"line_end":19,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":86080,"byte_end":86083,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W, O>>::new","value":"pub fn new(W, O) -> Serializer<W, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Serializer with the given `Write`r.\n","sig":null,"attributes":[{"value":"/ Creates a new Serializer with the given `Write`r.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":86015,"byte_end":86068,"line_start":36,"line_end":36,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":842},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":96991,"byte_end":96999,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"Compound","qualname":"::ser::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":846}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1676,"byte_end":1682,"line_start":59,"line_end":59,"column_start":8,"column_end":14},"name":"config","qualname":"::config","value":"pub fn config() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"/ Get a default configuration object.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1404,"byte_end":1443,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1444,"byte_end":1447,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ### Default Configuration:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1448,"byte_end":1478,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1479,"byte_end":1482,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ | Byte limit | Endianness |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1483,"byte_end":1514,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ |------------|------------|","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1515,"byte_end":1546,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ | Unlimited  | Little     |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1547,"byte_end":1578,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1579,"byte_end":1596,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"1.3.0\", note = \"please use `options()` instead\")","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1597,"byte_end":1668,"line_start":58,"line_end":58,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2276,"byte_end":2283,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"options","qualname":"::options","value":"pub fn options() -> DefaultOptions","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"/ Get a default configuration object.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1718,"byte_end":1757,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1758,"byte_end":1761,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration returned by this function","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1762,"byte_end":1830,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/ is not the same as that used by the other functions in this","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1831,"byte_end":1894,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ module. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1895,"byte_end":1914,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1915,"byte_end":1982,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1983,"byte_end":2010,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2011,"byte_end":2014,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ### Default Configuration:","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2015,"byte_end":2045,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2046,"byte_end":2049,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ | Byte limit | Endianness | Int Encoding | Trailing Behavior |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2050,"byte_end":2116,"line_start":73,"line_end":73,"column_start":1,"column_end":67}},{"value":"/ |------------|------------|--------------|-------------------|","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2117,"byte_end":2183,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/ | Unlimited  | Little     | Varint       | Reject            |","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2184,"byte_end":2250,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2251,"byte_end":2268,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2821,"byte_end":2835,"line_start":90,"line_end":90,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::serialize_into","value":"pub fn serialize_into<W, T: ?Sized>(W, &T) -> Result<()> where\nW: std::io::Write, T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using the default configuration.","sig":null,"attributes":[{"value":"/ Serializes an object directly into a `Writer` using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2335,"byte_end":2417,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ If the serialization would take more bytes than allowed by the size limit, an error","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2422,"byte_end":2509,"line_start":83,"line_end":83,"column_start":1,"column_end":88}},{"value":"/ is returned and *no bytes* will be written into the `Writer`.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2510,"byte_end":2575,"line_start":84,"line_end":84,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2576,"byte_end":2579,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration used by this function is not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2580,"byte_end":2651,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/ the same as that used by the `DefaultOptions` struct. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2652,"byte_end":2717,"line_start":87,"line_end":87,"column_start":1,"column_end":66}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2718,"byte_end":2785,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":2786,"byte_end":2813,"line_start":89,"line_end":89,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3379,"byte_end":3388,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"pub fn serialize<T: ?Sized>(&T) -> Result<Vec<u8>> where T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using the default configuration.","sig":null,"attributes":[{"value":"/ Serializes a serializable object into a `Vec` of bytes using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3042,"byte_end":3133,"line_start":100,"line_end":100,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3134,"byte_end":3137,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration used by this function is not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3138,"byte_end":3209,"line_start":102,"line_end":102,"column_start":1,"column_end":72}},{"value":"/ the same as that used by the `DefaultOptions` struct. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3210,"byte_end":3275,"line_start":103,"line_end":103,"column_start":1,"column_end":66}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3276,"byte_end":3343,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3344,"byte_end":3371,"line_start":105,"line_end":105,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3985,"byte_end":4001,"line_start":124,"line_end":124,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::deserialize_from","value":"pub fn deserialize_from<R, T>(R) -> Result<T> where R: std::io::Read,\nT: serde::de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using the default configuration.","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3582,"byte_end":3666,"line_start":116,"line_end":116,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3667,"byte_end":3670,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3671,"byte_end":3739,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3740,"byte_end":3743,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration used by this function is not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3744,"byte_end":3815,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ the same as that used by the `DefaultOptions` struct. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3816,"byte_end":3881,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3882,"byte_end":3949,"line_start":122,"line_end":122,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":3950,"byte_end":3977,"line_start":123,"line_end":123,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4760,"byte_end":4783,"line_start":145,"line_end":145,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::deserialize_from_custom","value":"pub fn deserialize_from_custom<'a, R, T>(R) -> Result<T> where\nR: de::read::BincodeRead, T: serde::de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4225,"byte_end":4314,"line_start":135,"line_end":135,"column_start":1,"column_end":90}},{"value":"/ It is highly recommended to use `deserialize_from` unless you need to implement","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4315,"byte_end":4398,"line_start":136,"line_end":136,"column_start":1,"column_end":84}},{"value":"/ `BincodeRead` for performance reasons.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4399,"byte_end":4441,"line_start":137,"line_end":137,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4442,"byte_end":4445,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4446,"byte_end":4514,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4515,"byte_end":4518,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration used by this function is not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4519,"byte_end":4590,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/ the same as that used by the `DefaultOptions` struct. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4591,"byte_end":4656,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4657,"byte_end":4724,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":4725,"byte_end":4752,"line_start":144,"line_end":144,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5141,"byte_end":5161,"line_start":160,"line_end":160,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::deserialize_in_place","value":"pub fn deserialize_in_place<'a, R, T>(R, &mut T) -> Result<()> where\nT: serde::de::Deserialize, R: BincodeRead","parent":null,"children":[],"decl_id":null,"docs":" Only use this if you know what you're doing.","sig":null,"attributes":[{"value":"/ Only use this if you know what you're doing.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5030,"byte_end":5078,"line_start":156,"line_end":156,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5079,"byte_end":5082,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ This is part of the public API.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5083,"byte_end":5118,"line_start":158,"line_end":158,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5753,"byte_end":5764,"line_start":177,"line_end":177,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"pub fn deserialize<'a, T>(&'a [u8]) -> Result<T> where\nT: serde::de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using the default configuration.","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes into an instance of `T` using the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5417,"byte_end":5507,"line_start":171,"line_end":171,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5508,"byte_end":5511,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration used by this function is not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5512,"byte_end":5583,"line_start":173,"line_end":173,"column_start":1,"column_end":72}},{"value":"/ the same as that used by the `DefaultOptions` struct. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5584,"byte_end":5649,"line_start":174,"line_end":174,"column_start":1,"column_end":66}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5650,"byte_end":5717,"line_start":175,"line_end":175,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5718,"byte_end":5745,"line_start":176,"line_end":176,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":6316,"byte_end":6331,"line_start":193,"line_end":193,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::serialized_size","value":"pub fn serialized_size<T: ?Sized>(&T) -> Result<u64> where T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with the default configuration.","sig":null,"attributes":[{"value":"/ Returns the size that an object would be if serialized using Bincode with the default configuration.","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":5966,"byte_end":6070,"line_start":187,"line_end":187,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":6071,"byte_end":6074,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ **Warning:** the default configuration used by this function is not","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":6075,"byte_end":6146,"line_start":189,"line_end":189,"column_start":1,"column_end":72}},{"value":"/ the same as that used by the `DefaultOptions` struct. See the","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":6147,"byte_end":6212,"line_start":190,"line_end":190,"column_start":1,"column_end":66}},{"value":"/ [config](config/index.html#options-struct-vs-bincode-functions)","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":6213,"byte_end":6280,"line_start":191,"line_end":191,"column_start":1,"column_end":68}},{"value":"/ module for more details","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":6281,"byte_end":6308,"line_start":192,"line_end":192,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21116,"byte_end":21128,"line_start":19,"line_end":19,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21203,"byte_end":21212,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21284,"byte_end":21296,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":27228,"byte_end":27242,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":32419,"byte_end":32433,"line_start":330,"line_end":330,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":36360,"byte_end":36374,"line_start":460,"line_end":460,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47064,"byte_end":47070,"line_start":102,"line_end":102,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53334,"byte_end":53341,"line_start":22,"line_end":22,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53671,"byte_end":53679,"line_start":39,"line_end":39,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54561,"byte_end":54574,"line_start":19,"line_end":19,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54702,"byte_end":54716,"line_start":26,"line_end":26,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9580,"byte_end":9594,"line_start":79,"line_end":79,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10001,"byte_end":10015,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10099,"byte_end":10113,"line_start":98,"line_end":98,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16708,"byte_end":16709,"line_start":272,"line_end":272,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17532,"byte_end":17546,"line_start":302,"line_end":302,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17790,"byte_end":17805,"line_start":312,"line_end":312,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18030,"byte_end":18050,"line_start":322,"line_end":322,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18287,"byte_end":18304,"line_start":332,"line_end":332,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18570,"byte_end":18585,"line_start":342,"line_end":342,"column_start":69,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18878,"byte_end":18892,"line_start":353,"line_end":353,"column_start":62,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19158,"byte_end":19178,"line_start":363,"line_end":363,"column_start":64,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19449,"byte_end":19466,"line_start":374,"line_end":374,"column_start":66,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72161,"byte_end":72172,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72760,"byte_end":72768,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72976,"byte_end":72987,"line_start":71,"line_end":71,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":73532,"byte_end":73540,"line_start":90,"line_end":90,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":73813,"byte_end":73824,"line_start":101,"line_end":101,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":74074,"byte_end":74085,"line_start":111,"line_end":111,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":74932,"byte_end":74940,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":75188,"byte_end":75196,"line_start":152,"line_end":152,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56347,"byte_end":56359,"line_start":45,"line_end":45,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56624,"byte_end":56636,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56945,"byte_end":56957,"line_start":65,"line_end":65,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":64106,"byte_end":64112,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":65857,"byte_end":65863,"line_start":363,"line_end":363,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78352,"byte_end":78361,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":79821,"byte_end":79826,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":79933,"byte_end":79942,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":81020,"byte_end":81025,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":81166,"byte_end":81171,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85992,"byte_end":86002,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":91910,"byte_end":91921,"line_start":239,"line_end":239,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":97112,"byte_end":97120,"line_start":431,"line_end":431,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":97512,"byte_end":97520,"line_start":453,"line_end":453,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":97918,"byte_end":97926,"line_start":475,"line_end":475,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":98323,"byte_end":98331,"line_start":497,"line_end":497,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":98719,"byte_end":98727,"line_start":519,"line_end":519,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":99297,"byte_end":99305,"line_start":549,"line_end":549,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":99723,"byte_end":99731,"line_start":571,"line_end":571,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":100235,"byte_end":100247,"line_start":597,"line_end":597,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":100606,"byte_end":100618,"line_start":615,"line_end":615,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":100983,"byte_end":100995,"line_start":633,"line_end":633,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":101359,"byte_end":101371,"line_start":651,"line_end":651,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":101731,"byte_end":101743,"line_start":669,"line_end":669,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":102280,"byte_end":102292,"line_start":695,"line_end":695,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":102677,"byte_end":102689,"line_start":713,"line_end":713,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":104106,"byte_end":104116,"line_start":768,"line_end":768,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1116,"byte_end":1122,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/lib.rs","byte_start":1187,"byte_end":1189,"line_start":38,"line_end":38,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":423}},{"kind":"Mod","span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":55409,"byte_end":55413,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":443}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21116,"byte_end":21128,"line_start":19,"line_end":19,"column_start":27,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1023},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21203,"byte_end":21212,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/endian.rs","byte_start":21284,"byte_end":21296,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1033},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":27228,"byte_end":27242,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":32419,"byte_end":32433,"line_start":330,"line_end":330,"column_start":22,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1054},"to":{"krate":0,"index":52}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/int.rs","byte_start":36360,"byte_end":36374,"line_start":460,"line_end":460,"column_start":22,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1059},"to":{"krate":0,"index":52}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/legacy.rs","byte_start":47064,"byte_end":47070,"line_start":102,"line_end":102,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53334,"byte_end":53341,"line_start":22,"line_end":22,"column_start":20,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1136},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/limit.rs","byte_start":53671,"byte_end":53679,"line_start":39,"line_end":39,"column_start":20,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54561,"byte_end":54574,"line_start":19,"line_end":19,"column_start":24,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1147},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/trailing.rs","byte_start":54702,"byte_end":54716,"line_start":26,"line_end":26,"column_start":24,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1152},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":9580,"byte_end":9594,"line_start":79,"line_end":79,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10001,"byte_end":10015,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":10099,"byte_end":10113,"line_start":98,"line_end":98,"column_start":26,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1157},"to":{"krate":0,"index":409}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11381,"byte_end":11396,"line_start":128,"line_end":128,"column_start":20,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":409},"to":{"krate":0,"index":315}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":11399,"byte_end":11404,"line_start":128,"line_end":128,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":315}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":16708,"byte_end":16709,"line_start":272,"line_end":272,"column_start":38,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":358},"to":{"krate":0,"index":315}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17532,"byte_end":17546,"line_start":302,"line_end":302,"column_start":32,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":17790,"byte_end":17805,"line_start":312,"line_end":312,"column_start":39,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18030,"byte_end":18050,"line_start":322,"line_end":322,"column_start":34,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18287,"byte_end":18304,"line_start":332,"line_end":332,"column_start":36,"column_end":53},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18570,"byte_end":18585,"line_start":342,"line_end":342,"column_start":69,"column_end":84},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1175},"to":{"krate":0,"index":409}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":18878,"byte_end":18892,"line_start":353,"line_end":353,"column_start":62,"column_end":76},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1163},"to":{"krate":0,"index":409}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19158,"byte_end":19178,"line_start":363,"line_end":363,"column_start":64,"column_end":84},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1187},"to":{"krate":0,"index":409}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/config/mod.rs","byte_start":19449,"byte_end":19466,"line_start":374,"line_end":374,"column_start":66,"column_end":83},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1199},"to":{"krate":0,"index":409}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":71310,"byte_end":71314,"line_start":13,"line_end":13,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2961},"to":{"krate":0,"index":447}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72161,"byte_end":72172,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72760,"byte_end":72768,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":72976,"byte_end":72987,"line_start":71,"line_end":71,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":454},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":73532,"byte_end":73540,"line_start":90,"line_end":90,"column_start":32,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":457},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":73813,"byte_end":73824,"line_start":101,"line_end":101,"column_start":16,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":74074,"byte_end":74085,"line_start":111,"line_end":111,"column_start":42,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":447}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":74932,"byte_end":74940,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/read.rs","byte_start":75188,"byte_end":75196,"line_start":152,"line_end":152,"column_start":33,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":447}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56347,"byte_end":56359,"line_start":45,"line_end":45,"column_start":33,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56624,"byte_end":56636,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":56945,"byte_end":56957,"line_start":65,"line_end":65,"column_start":44,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":64106,"byte_end":64112,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":577},"to":{"krate":16,"index":1417}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/de/mod.rs","byte_start":65857,"byte_end":65863,"line_start":363,"line_end":363,"column_start":17,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":599},"to":{"krate":16,"index":1435}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":78352,"byte_end":78361,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1231},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":79821,"byte_end":79826,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":79933,"byte_end":79942,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1231},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":81020,"byte_end":81025,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":8135}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/error.rs","byte_start":81166,"byte_end":81171,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":8749}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":85992,"byte_end":86002,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":91910,"byte_end":91921,"line_start":239,"line_end":239,"column_start":18,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":97112,"byte_end":97120,"line_start":431,"line_end":431,"column_start":45,"column_end":53},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1818}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":97512,"byte_end":97520,"line_start":453,"line_end":453,"column_start":47,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1824}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":97918,"byte_end":97926,"line_start":475,"line_end":475,"column_start":53,"column_end":61},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1830}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":98323,"byte_end":98331,"line_start":497,"line_end":497,"column_start":54,"column_end":62},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1836}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":98719,"byte_end":98727,"line_start":519,"line_end":519,"column_start":45,"column_end":53},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1842}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":99297,"byte_end":99305,"line_start":549,"line_end":549,"column_start":48,"column_end":56},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1853}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":99723,"byte_end":99731,"line_start":571,"line_end":571,"column_start":55,"column_end":63},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":842},"to":{"krate":16,"index":1860}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":100235,"byte_end":100247,"line_start":597,"line_end":597,"column_start":51,"column_end":63},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1818}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":100606,"byte_end":100618,"line_start":615,"line_end":615,"column_start":53,"column_end":65},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1824}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":100983,"byte_end":100995,"line_start":633,"line_end":633,"column_start":59,"column_end":71},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1830}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":101359,"byte_end":101371,"line_start":651,"line_end":651,"column_start":60,"column_end":72},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1836}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":101731,"byte_end":101743,"line_start":669,"line_end":669,"column_start":56,"column_end":68},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1842}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":102280,"byte_end":102292,"line_start":695,"line_end":695,"column_start":54,"column_end":66},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1853}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":102677,"byte_end":102689,"line_start":713,"line_end":713,"column_start":61,"column_end":73},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":912},"to":{"krate":16,"index":1860}},{"span":{"file_name":"/Users/cohix-16/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.2/src/ser/mod.rs","byte_start":104106,"byte_end":104116,"line_start":768,"line_end":768,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":983},"to":{"krate":4294967295,"index":4294967295}}]}